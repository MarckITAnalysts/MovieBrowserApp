// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Screen test cases renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
  style={
    [
      {
        "backgroundColor": "#262626",
      },
      {
        "flexBasis": "0%",
        "flexGrow": 1,
        "flexShrink": 1,
      },
    ]
  }
>
  <View
    style={
      [
        {
          "marginLeft": 16,
          "marginRight": 16,
        },
        {
          "marginBottom": 12,
        },
        {
          "flexDirection": "row",
        },
        {
          "justifyContent": "space-between",
        },
        {
          "alignItems": "center",
        },
        {
          "borderBottomWidth": 1,
          "borderLeftWidth": 1,
          "borderRightWidth": 1,
          "borderTopWidth": 1,
        },
        {
          "borderBottomColor": "#737373",
          "borderLeftColor": "#737373",
          "borderRightColor": "#737373",
          "borderTopColor": "#737373",
        },
        {
          "borderBottomLeftRadius": 9999,
          "borderBottomRightRadius": 9999,
          "borderTopLeftRadius": 9999,
          "borderTopRightRadius": 9999,
        },
      ]
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Search Movie"
      placeholderTextColor="lightgray"
      style={
        [
          {
            "paddingBottom": 4,
          },
          {
            "paddingLeft": 24,
          },
          {
            "flexBasis": "0%",
            "flexGrow": 1,
            "flexShrink": 1,
          },
          {
            "fontSize": 16,
            "lineHeight": 24,
          },
          {
            "fontWeight": "600",
          },
          {
            "color": "#fff",
          },
          {
            "letterSpacing": 0.5,
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#737373",
          "borderBottomLeftRadius": 9999,
          "borderBottomRightRadius": 9999,
          "borderTopLeftRadius": 9999,
          "borderTopRightRadius": 9999,
          "marginBottom": 4,
          "marginLeft": 4,
          "marginRight": 4,
          "marginTop": 4,
          "opacity": 1,
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        aria-hidden="true"
        bbHeight="25"
        bbWidth="25"
        color="white"
        fill="none"
        focusable={false}
        height="25"
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="currentColor"
        strokeWidth={1.5}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 25,
              "width": 25,
            },
          ]
        }
        tintColor="white"
        vbHeight={24}
        vbWidth={24}
        width="25"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          stroke={
            {
              "type": 2,
            }
          }
          strokeWidth="1.5"
        >
          <RNSVGPath
            d="M6 18L18 6M6 6l12 12"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            strokeLinecap={1}
            strokeLinejoin={1}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <View
    style={
      [
        {
          "flexDirection": "row",
        },
        {
          "justifyContent": "center",
        },
      ]
    }
  >
    <Image
      source={1}
      style={
        [
          {
            "height": 384,
          },
          {
            "width": 384,
          },
        ]
      }
    />
  </View>
</RNCSafeAreaView>
`;
